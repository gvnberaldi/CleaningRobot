name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  unit-integration-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5431:5432
        options: --health-cmd="pg_isready -U test" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Run Unit and Integration Tests with Coverage
        run: |
          coverage run -m pytest tests/unit tests/integration
          coverage report --fail-under=90
  
  acceptance-tests:
    name: Acceptance Tests
    runs-on: ubuntu-latest
    needs: unit-integration-tests

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build the app
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./docker-compose-test.yml"

      - name: Run tests inside the container
        run: |
          docker exec app pytest
        continue-on-error: false  # Stop the workflow if tests fail

  # For main branch - deploys the app if tests pass
  deploy:
    name: Deploy to Docker Hub
    runs-on: ubuntu-latest
    needs: acceptance-tests
    if: github.ref == 'refs/heads/main'  # Only run this job on the main branch

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub if tests pass
        if: success()  # Only push if tests pass
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

      - name: Clean up Dockerfile and docker-compose-test.yml
        if: success()  # Only delete files if the previous steps were successful
        run: |
          git rm Dockerfile
          git rm docker-compose-test.yml
          git commit -m "Remove Dockerfile and docker-compose-test.yml from main branch"
          git push origin main